import os
from aiogram.types import (
    ReplyKeyboardMarkup,
    KeyboardButton,
    InlineKeyboardMarkup,
    InlineKeyboardButton,
)
from aiogram.utils.keyboard import InlineKeyboardBuilder
from dotenv import load_dotenv
from abc import ABC, abstractmethod


load_dotenv()
URL_ADMIN = os.getenv('URL_ADMIN')


class AbstractInlineKeyboard(ABC):
    def __init__(self):
        self.keyboard = InlineKeyboardMarkup(resize_keyboard=True)

    def add_button(self, text, callback_data):
        self.keyboard.add(
            InlineKeyboardButton(text, callback_data=callback_data)
        )

    def insert_button(self, text, callback_data):
        self.keyboard.insert(
            InlineKeyboardButton(text, callback_data=callback_data)
        )

    def make_row_width(self, num):
        self.keyboard.row_width = num

    def button_start_menu(self):
        self.add_button('üóÇÔ∏è', 'start')

    def button_cancel(self):
        self.add_button('–æ—Ç–º–µ–Ω–∞', 'cancel')


class StartInlineKeyboard(AbstractInlineKeyboard):
    def __init__(self):
        """–ö–æ–Ω–ø–∫–∞ –≤—Ö–æ–¥–∞ –≤ –∞–¥–º–∏–Ω–∫—É."""
        super().__init__()
        kb_web = InlineKeyboardButton('üìü –ê–¥–º–∏–Ω–∫–∞ üìü', url=URL_ADMIN)
        self.keyboard.add(kb_web)

async def start_kb(cancel: bool = False):
    keyboard = InlineKeyboardBuilder()

    weight = InlineKeyboardButton(text="–∂—É—Ä–Ω–∞–ª –≤–µ—Å–∞ ‚öñÔ∏è", callback_data="workout journal")
    workout = InlineKeyboardButton(text="–∂—É—Ä–Ω–∞–ª —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ üèãÔ∏è", callback_data="weight journal")
    expense = InlineKeyboardButton(text="–∂—É—Ä–Ω–∞–ª —Ä–∞—Å—Ö–æ–¥–æ–≤ üíµ", callback_data="expencse journal")

    keyboard.row(weight).row(workout).row(expense)

    if cancel:
        kb_cancel = InlineKeyboardButton(text="–æ—Ç–º–µ–Ω–∞", callback_data="cancel")
        keyboard.row(kb_cancel)

    return keyboard.as_markup()


async def weight_journal_kb():
    keyboard = InlineKeyboardBuilder()

    change_weight = InlineKeyboardButton(text="–∏–∑–º–µ–Ω–∏—Ç—å –∑–∞–ø–∏—Å—å", callback_data="change weight")
    add_weight = InlineKeyboardButton(text="–¥–æ–±–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å—å", callback_data="add weight")


class WeightInlineKeyboard(AbstractInlineKeyboard):
    pass


class WorkoutInlineKeyboard(AbstractInlineKeyboard):
    def get_buttons_next_or_back_record(self):
        self.add_button('—Å–ª–µ–¥—É—é—â–∞—è', callback_data='& next workout')
        self.add_button('–ø—Ä–µ–¥—ã–¥—É—â–∞—è', callback_data='& back workout')

    def button_delete_record(self):
        self.add_button('—É–¥–∞–ª–∏—Ç—å', 'del workout')

    def get_buttons_cl(self, month, year):
        self.add_button('–Ω–∞–∑–∞–¥', f'-{month} {year}')
        self.insert_button('–≤–ø–µ—Ä–µ–¥', f'+{month} {year}')


class ExpenseInlineKeyboard(AbstractInlineKeyboard):
    def button_root_expense(self):
        self.add_button('<<', 'expencse journal')

    def expense_category_buttons(self):
        self.add_button('–∑–¥–æ—Ä–æ–≤—å–µ', '^ health')
        self.add_button('—Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç', '^ transport')
        self.add_button('–µ–¥–∞', '^ food')
        self.add_button('—Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è', '^ entertainment')
        self.add_button('–ø–æ–∫—É–ø–∫–∏', '^ purchases')
        self.add_button('–ø–æ–¥–∞—Ä–∫–∏', '^ present')
        self.add_button('–ø—Ä–æ—á–µ–µ', '^ other')
